// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/pratikjagrut/book-catalog/ent/book"
	"github.com/pratikjagrut/book-catalog/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	bookFields := schema.Book{}.Fields()
	_ = bookFields
	// bookDescTitle is the schema descriptor for title field.
	bookDescTitle := bookFields[0].Descriptor()
	// book.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	book.TitleValidator = bookDescTitle.Validators[0].(func(string) error)
	// bookDescGenre is the schema descriptor for genre field.
	bookDescGenre := bookFields[1].Descriptor()
	// book.GenreValidator is a validator for the "genre" field. It is called by the builders before save.
	book.GenreValidator = bookDescGenre.Validators[0].(func(string) error)
	// bookDescPublicationDate is the schema descriptor for publication_date field.
	bookDescPublicationDate := bookFields[2].Descriptor()
	// book.PublicationDateValidator is a validator for the "publication_date" field. It is called by the builders before save.
	book.PublicationDateValidator = bookDescPublicationDate.Validators[0].(func(string) error)
	// bookDescIsbn is the schema descriptor for isbn field.
	bookDescIsbn := bookFields[3].Descriptor()
	// book.IsbnValidator is a validator for the "isbn" field. It is called by the builders before save.
	book.IsbnValidator = bookDescIsbn.Validators[0].(func(string) error)
	// bookDescCreatedAt is the schema descriptor for created_at field.
	bookDescCreatedAt := bookFields[4].Descriptor()
	// book.DefaultCreatedAt holds the default value on creation for the created_at field.
	book.DefaultCreatedAt = bookDescCreatedAt.Default.(time.Time)
}
